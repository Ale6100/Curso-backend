worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    upstream punto_de_redireccion { #Le decimos a nginx cuáles son los puertos donde necesitamos que conecte
        server 127.0.0.1:8081;
        server 127.0.0.1:8082;
        server 127.0.0.1:8083;
        server 127.0.0.1:8084;
        server 127.0.0.1:8085;
    }

    server {
        listen       80;
        server_name  localhost; # Nombre personalizable

        # root ./desafio_ServidorConBalanceDeCarga/src/public; # Especifico la ruta a los servicios estaticos (es mas óptimo que el expres.static que usábamos antes, ya que le estamos pidiendo los archivos a proxy en vez de al servidor)
        
        location = / { #Busca estrictamente esta ruta
            proxy_pass http://127.0.0.1:8080;
        }

        location = /api/randoms { # Ruta de ejemplo
            proxy_pass http://punto_de_redireccion; # Quiero que en /api/randoms se utilice únicamente este servidor
        }

        location / {
            try_files $uri $uri/ @express; # Corrobora si puedes enviar algo (try_files) desde la uri especificada ($uri), conectalo a cualquier otra uri que vaya mas adelante ($uri/). Indico que quiero redirigir a mi propio router de mi aplicativo de express (@express)
            # root   html;
            # index  index.html index.htm;
        }

        location @express {
            proxy_pass http://127.0.0.1:8080;
        }

        # location @express { # El comportamiento del router de express. Conecta con alguno de los servidores seteados
        #     proxy_pass http://punto_de_redireccion; #La petición que le llega al proxy se la pasa a los servers mencionados en punto_de_redireccion
        # }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
